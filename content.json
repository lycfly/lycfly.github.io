{"meta":{"title":"理想乡","subtitle":"LYC's Playgrand","description":"lyc's blog","author":"LYC","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-12-16T12:19:10.000Z","updated":"2018-12-19T05:26:07.641Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"LYC"},{"title":"标签","date":"2018-12-18T16:19:05.000Z","updated":"2018-12-18T16:24:25.887Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-12-18T16:28:01.000Z","updated":"2018-12-18T16:28:32.886Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Tensorflow之Summary用法总结","slug":"Tensorflow之Summary用法总结","date":"2018-12-16T13:05:08.000Z","updated":"2018-12-19T05:26:32.000Z","comments":true,"path":"2018/12/16/Tensorflow之Summary用法总结/","link":"","permalink":"http://yoursite.com/2018/12/16/Tensorflow之Summary用法总结/","excerpt":"Tensorflow之Summary用法总结最近在研究tensorflow自带的例程speech_command,顺便学习tensorflow的一些基本用法。 其中tensorboard 作为一款可视化神器，可以说是学习tensorflow时模型训练以及参数可视化的法宝。 而在训练过程中，主要用到了tf.summary()的各类方法，能够保存训练过程以及参数分布图并在tensorboard显示。","text":"Tensorflow之Summary用法总结最近在研究tensorflow自带的例程speech_command,顺便学习tensorflow的一些基本用法。 其中tensorboard 作为一款可视化神器，可以说是学习tensorflow时模型训练以及参数可视化的法宝。 而在训练过程中，主要用到了tf.summary()的各类方法，能够保存训练过程以及参数分布图并在tensorboard显示。 tf.summary包含的诸多函数1、tf.summary.scalar用来显示标量信息，其格式为： 1tf.summary.scalar(tags, values, collections=None, name=None) 例如：tf.summary.scalar(‘mean’, mean) 一般在画loss,accuary时会用到这个函数。 2、tf.summary.histogram用来显示直方图信息，其格式为： 1tf.summary.histogram(tags, values, collections=None, name=None) 例如： tf.summary.histogram(‘histogram’, var) 一般用来显示训练过程中变量的分布情况 3、tf.summary.distribution分布图，一般用于显示weights分布 4、tf.summary.text可以将文本类型的数据转换为tensor写入summary中： 例如： 12text = \"\"\"/a/b/c\\\\_d/f\\\\_g\\\\_h\\\\_2017\"\"\"summary_op0 = tf.summary.text('text', tf.convert_to_tensor(text)) 5、tf.summary.image输出带图像的probuf，汇总数据的图像的的形式如下： ‘ tag /image/0’, ‘ tag /image/1’…，如：input/image/0等。 格式：tf.summary.image(tag, tensor, max_images=3, collections=None, name=Non 6、tf.summary.audio展示训练过程中记录的音频 7、tf.summary.merge_allmerge_all 可以将所有summary全部保存到磁盘，以便tensorboard显示。如果没有特殊要求，一般用这一句就可一显示训练时的各种信息了。 格式：tf.summaries.merge_all(key=’summaries’) 8、tf.summary.FileWriter指定一个文件用来保存图。 格式：tf.summary.FileWritter(path,sess.graph) 可以调用其add_summary（）方法将训练过程数据保存在filewriter指定的文件中 Tensorflow Summary 用法示例: 1234567tf.summary.scalar('accuracy',acc) #生成准确率标量图 merge_summary = tf.summary.merge_all() train_writer = tf.summary.FileWriter(dir,sess.graph)#定义一个写入summary的目标文件，dir为写入文件地址 ......(交叉熵、优化器等定义) for step in xrange(training_step): #训练循环 train_summary = sess.run(merge_summary,feed_dict = &#123;...&#125;)#调用sess.run运行图，生成一步的训练过程数据 train_writer.add_summary(train_summary,step)#调用train_writer的add_summary方法将训练过程以及训练步数保存 此时开启tensorborad： 1tensorboard --logdir=/summary_dir 便能看见accuracy曲线了。 另外，如果我不想保存所有定义的summary信息，也可以用tf.summary.merge方法有选择性地保存信息： 9、tf.summary.merge格式：tf.summary.merge(inputs, collections=None, name=None) 一般选择要保存的信息还需要用到tf.get_collection()函数 示例： 1234567tf.summary.scalar('accuracy',acc) #生成准确率标量图 merge_summary = tf.summary.merge([tf.get_collection(tf.GraphKeys.SUMMARIES,'accuracy'),...(其他要显示的信息)]) train_writer = tf.summary.FileWriter(dir,sess.graph)#定义一个写入summary的目标文件，dir为写入文件地址 ......(交叉熵、优化器等定义) for step in xrange(training_step): #训练循环 train_summary = sess.run(merge_summary,feed_dict = &#123;...&#125;)#调用sess.run运行图，生成一步的训练过程数据 train_writer.add_summary(train_summary,step)#调用train_writer的add_summary方法将训练过程以及训练步数保存 使用tf.get_collection函数筛选图中summary信息中的accuracy信息，这里的 tf.GraphKeys.SUMMARIES 是summary在collection中的标志。 当然，也可以直接： 12acc_summary = tf.summary.scalar('accuracy',acc) #生成准确率标量图 merge_summary = tf.summary.merge([acc_summary ,...(其他要显示的信息)]) #这里的[]不可省 如果要在tensorboard中画多个数据图，需定义多个tf.summary.FileWriter并重复上述过程。","categories":[{"name":"技术文","slug":"技术文","permalink":"http://yoursite.com/categories/技术文/"}],"tags":[{"name":"Tensorflow","slug":"Tensorflow","permalink":"http://yoursite.com/tags/Tensorflow/"}],"keywords":[{"name":"技术文","slug":"技术文","permalink":"http://yoursite.com/categories/技术文/"}]},{"title":"Ubuntu下QQ的使用并手动设置QQ文件保存路径","slug":"Ubuntu下QQ的使用并手动设置QQ文件保存路径","date":"2018-12-16T12:51:26.000Z","updated":"2018-12-19T05:25:44.003Z","comments":true,"path":"2018/12/16/Ubuntu下QQ的使用并手动设置QQ文件保存路径/","link":"","permalink":"http://yoursite.com/2018/12/16/Ubuntu下QQ的使用并手动设置QQ文件保存路径/","excerpt":"背景&amp;&amp;目标腾讯迟迟不肯做linux版本的QQ和微信，实在抠脚。没有办法，要在linux上使用QQ，目前我找到最好的办法就是使用wine，然而wine这个杀千刀的又是个坑货，QQ除了聊天，还有最重要的功能就是传文件啊Orz,这货不但把路径隐藏了，还藏得这么深，，，无奈只能一层一层找，在用软连接链接出来。。。","text":"背景&amp;&amp;目标腾讯迟迟不肯做linux版本的QQ和微信，实在抠脚。没有办法，要在linux上使用QQ，目前我找到最好的办法就是使用wine，然而wine这个杀千刀的又是个坑货，QQ除了聊天，还有最重要的功能就是传文件啊Orz,这货不但把路径隐藏了，还藏得这么深，，，无奈只能一层一层找，在用软连接链接出来。。。 下面主要以Ubuntu16.0.4为例，安装QQ,并手动设置文件保存路径。 ubuntu下使用wine安装QQ 主要参考 https://blog.csdn.net/hustcw98/article/details/79323024 下载地址：http://yun.tzmm.com.cn/index.php/s/XRbfi6aOIjv5gwj Appimage包不用做什么别的处理，安装啥的都不需要。。找到文件所在目录，终端中修改一下文件的权限 1chmod a+x QQ-20171129-x86_64.AppImage 之后就可以直接运行了。。。 1./QQ-20171129-x86_64.AppImage 然而作为深度windows依赖患者，自然不会习惯开个qq还要敲命令 索性在把它固定到开始栏： 首先把QQ-20171129-x86_64.AppImage 名字改的简单点，移动到linux下的/opt下： 先cd到QQ-20171129-x86_64.AppImage所在路径，之后 1sudo mv QQ-20171129-x86_64.AppImage /opt/QQ 再创建个启动器： 1sudo gedit /usr/share/applications/QQ.desktop 将以下内容复制进去： 1234567891011[Desktop Entry] Name=QQName[zh_CN]=QQExec=/opt/QQIcon=/opt/QQ.pngTerminal=falseX-MultipleArgs=falseType=ApplicationEncoding=UTF-8Categories=Application;StartupNotify=false 其中，QQ.png图标可以从网上随便找一个图标放到/opt或者随便什么路径，只要desktop里填写正确路径即可。 如此QQ就可以像windows里一样打开了，可能还要手动固定到任务栏，这个就不提了。 创建QQ文件保存路径这种方法安装的QQ实际是基于wine的。。。如果你在里面接收文件，想要找到路径，这货显示的是windows里一样的路径，还有什么还有“我的电脑”。。。linux里哪来这玩意 所以实际他把存的文件放在了一个隐藏文件夹里，在home/你的用户名 目录下按CTRL+h 显示隐藏文件，找到里面一个叫 1.QQ.unionfs 的文件夹，从QQ里接到的文件都放在 1.QQ.unionfs/drive_c/users/你的用户名/My Documents/Tencent Files 文件下了。 所以可以在自己在外面创建一个该文件夹的软连接，方便找文件： 1sudo ln -s /home/你的用户名/.QQ.unionfs/drive_c/users/你的用户名/My\\ Documents/Tencent\\ Files /home/你的用户名/ 大功告成！如此便可在linux下愉快的使用QQ了！","categories":[{"name":"技术文","slug":"技术文","permalink":"http://yoursite.com/categories/技术文/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"}],"keywords":[{"name":"技术文","slug":"技术文","permalink":"http://yoursite.com/categories/技术文/"}]}]}